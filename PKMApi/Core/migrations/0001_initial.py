# Generated by Django 5.1.2 on 2024-11-19 11:17

import PKMApi.yandex_s3_storage
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(default='1.0.0', verbose_name='Версия приложения')),
                ('upd', models.DateField(verbose_name='Обновление от')),
                ('address', models.CharField(verbose_name='Адрес')),
                ('info', models.CharField(default='0', verbose_name='Информация')),
                ('instruction', models.CharField(default='0', verbose_name='Инструкция по эксплуатации')),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indent', models.IntegerField(default=0, verbose_name='Идентификатор')),
                ('name', models.CharField(max_length=255, verbose_name='Название участка')),
            ],
            options={
                'verbose_name': 'Участок',
                'verbose_name_plural': 'Участки',
                'db_table': 'Area',
            },
        ),
        migrations.CreateModel(
            name='Batcharchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('number', models.CharField(default=0, max_length=100, unique=True)),
                ('technology_number', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'Batcharchive',
            },
        ),
        migrations.CreateModel(
            name='Batchstatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Batchstatus',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название компании')),
                ('code', models.CharField(max_length=100, unique=True, verbose_name='Код компании')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Оплата')),
                ('paid_machines_quantity', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количество оплаченных машин')),
                ('date_of_start', models.DateField(blank=True, null=True, verbose_name='Дата начала подписки')),
                ('date_of_end', models.DateField(blank=True, null=True, verbose_name='Дата окончания подписки')),
                ('is_testdrive', models.BooleanField(default=True, verbose_name='Тестовый период')),
                ('number_of_support_staff', models.IntegerField(default=0, verbose_name='Количество персонала')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
                'db_table': 'Company',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indent', models.PositiveIntegerField(default=0, verbose_name='Идентификатор')),
                ('name', models.CharField(max_length=255, verbose_name='Название цеха')),
                ('main_user', models.CharField(verbose_name='Начальник цеха')),
            ],
            options={
                'verbose_name': 'Цех',
                'verbose_name_plural': 'Цеха',
                'db_table': 'Department',
            },
        ),
        migrations.CreateModel(
            name='Orderstatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Orderstatus',
            },
        ),
        migrations.CreateModel(
            name='Reporttype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Reporttype',
            },
        ),
        migrations.CreateModel(
            name='ShiftDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название дня недели')),
            ],
            options={
                'verbose_name': 'День недели',
                'verbose_name_plural': 'Дни недели',
                'db_table': 'ShiftDay',
            },
        ),
        migrations.CreateModel(
            name='Stagestatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Stagestatus',
            },
        ),
        migrations.CreateModel(
            name='Workstatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Workstatus',
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('count', models.IntegerField(default=0)),
                ('code', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('technology', models.TextField(blank=True, null=True)),
                ('isready', models.BooleanField(default=False)),
                ('rs_number', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('bath_archive', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.batcharchive')),
                ('batch_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.batchstatus')),
            ],
            options={
                'db_table': 'Batch',
            },
        ),
        migrations.CreateModel(
            name='Chiefbatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.batchstatus')),
                ('bath', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.batch')),
            ],
            options={
                'db_table': 'Chiefbatch',
            },
        ),
        migrations.CreateModel(
            name='Brigade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='Код бригады')),
                ('name', models.CharField(max_length=255, verbose_name='Название бригады')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.area', verbose_name='Участок')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Бригада',
                'verbose_name_plural': 'Бригады',
                'db_table': 'Brigade',
            },
        ),
        migrations.AddField(
            model_name='batcharchive',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.company'),
        ),
        migrations.AddField(
            model_name='area',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.department', verbose_name='Название цеха'),
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='Код устройства')),
                ('counter', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='Количество устройств')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Устройство',
                'verbose_name_plural': 'Устройства',
                'db_table': 'Device',
            },
        ),
        migrations.CreateModel(
            name='MachineControlMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Способ управления оборудованием',
                'verbose_name_plural': 'Способы управления оборудованием',
                'db_table': 'MachineControlMethod',
            },
        ),
        migrations.CreateModel(
            name='MachineStyle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Вид оборудования',
                'verbose_name_plural': 'Виды оборудования',
                'db_table': 'MachineStyle',
            },
        ),
        migrations.CreateModel(
            name='MachineGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.machinestyle', verbose_name='Вид оборудования')),
            ],
            options={
                'verbose_name': 'Группа оборудования',
                'verbose_name_plural': 'Группы оборудования',
                'db_table': 'MachineGroup',
            },
        ),
        migrations.CreateModel(
            name='MachineType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.machinegroup', verbose_name='Группа оборудования')),
            ],
            options={
                'verbose_name': 'Тип оборудования',
                'verbose_name_plural': 'Типы оборудования',
                'db_table': 'MachineType',
            },
        ),
        migrations.CreateModel(
            name='MachineName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inv_number', models.PositiveIntegerField(verbose_name='Инвентарный номер')),
                ('machine_code', models.CharField(max_length=100, verbose_name='Модель')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('surname', models.CharField(max_length=255, verbose_name='Дополнительное название')),
                ('img', models.FileField(blank=True, null=True, storage=PKMApi.yandex_s3_storage.ClientImgStorage(), upload_to='', verbose_name='Фотография')),
                ('ratio', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Коэффициент многостаночности')),
                ('tarife', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Сдельный тариф')),
                ('work_time', models.CharField(blank=True, null=True, verbose_name='Время работы')),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.area', verbose_name='Участок')),
                ('brigade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.brigade', verbose_name='Бригада')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.company', verbose_name='Компания')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.machinegroup', verbose_name='Группа оборудования')),
                ('machine_control_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.machinecontrolmethod', verbose_name='Способ управления оборудованием')),
                ('style', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.machinestyle', verbose_name='Вид оборудования')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.machinetype', verbose_name='Тип оборудования')),
            ],
            options={
                'verbose_name': 'Карточка оборудования',
                'verbose_name_plural': 'Карточки оборудования',
                'db_table': 'MachineName',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=100, unique=True)),
                ('date_receipt', models.DateField()),
                ('required_completion_date', models.DateField(blank=True, null=True)),
                ('priority', models.IntegerField()),
                ('calculated_completion_date', models.DateField(blank=True, null=True)),
                ('actual_completion_date', models.DateField(blank=True, null=True)),
                ('customer', models.CharField(max_length=255)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.company')),
                ('order_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.orderstatus')),
            ],
            options={
                'db_table': 'Order',
            },
        ),
        migrations.AddField(
            model_name='batch',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.order'),
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indent', models.PositiveIntegerField(default=0, verbose_name='Идентификатор')),
                ('name', models.CharField(max_length=255, verbose_name='Название площадки')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес площадки')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.company', verbose_name='Название компании')),
            ],
            options={
                'verbose_name': 'Площадка',
                'verbose_name_plural': 'Площадки',
                'db_table': 'Platform',
            },
        ),
        migrations.AddField(
            model_name='department',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.platform', verbose_name='Название площадки'),
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('brigade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.brigade', verbose_name='Бригада')),
            ],
            options={
                'verbose_name': 'Смена',
                'verbose_name_plural': 'Смены',
                'db_table': 'Shift',
            },
        ),
        migrations.CreateModel(
            name='ShiftMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='Код режима сменности')),
                ('work_hours_per_day', models.PositiveIntegerField(verbose_name='Рабочих часов в день')),
                ('shifts_per_day', models.PositiveIntegerField(verbose_name='Смен в сутках')),
                ('hours_in_shifts', models.PositiveIntegerField(verbose_name='Часов в смене')),
                ('work_days_inline', models.PositiveIntegerField(verbose_name='Рабочих дней в подряд')),
                ('weekends_inline', models.PositiveIntegerField(verbose_name='Выходных дней в подряд')),
                ('shift_working_day_mode', models.CharField(verbose_name='Режимы рабочего дня')),
                ('work_days_per_week', models.PositiveIntegerField(verbose_name='Рабочих дней в неделе')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Режим сменности',
                'verbose_name_plural': 'Режимы сменности',
                'db_table': 'ShiftMode',
            },
        ),
        migrations.CreateModel(
            name='ShiftBrigadeCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Core.shift', verbose_name='Смена')),
                ('day', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.shiftday', verbose_name='День недели')),
                ('shift_mode', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Core.shiftmode', verbose_name='Режим сменности')),
            ],
            options={
                'verbose_name': 'Календарь бригады',
                'verbose_name_plural': 'Календари бригад',
                'db_table': 'ShiftBrigadeCalendar',
            },
        ),
        migrations.AddField(
            model_name='brigade',
            name='shift_mode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Core.shiftmode', verbose_name='Режим сменности'),
        ),
        migrations.CreateModel(
            name='ShiftWorkingDayMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='Код рабочего дня')),
                ('name', models.CharField(max_length=255, verbose_name='Названние режима рабочего дня')),
                ('start_time', models.TimeField(verbose_name='Время начала смены')),
                ('end_time', models.TimeField(verbose_name='Время конца смены')),
                ('start_pause_1', models.TimeField(blank=True, null=True, verbose_name='Начало перерыва 1')),
                ('end_pause_1', models.TimeField(blank=True, null=True, verbose_name='Конец перерыва 1')),
                ('start_pause_2', models.TimeField(blank=True, null=True, verbose_name='Начало перерыва 2')),
                ('end_pause_2', models.TimeField(blank=True, null=True, verbose_name='Конец перерыва 2')),
                ('start_pause_3', models.TimeField(blank=True, null=True, verbose_name='Начало перерыва 3')),
                ('end_pause_3', models.TimeField(blank=True, null=True, verbose_name='Конец перерыва 3')),
                ('start_pause_4', models.TimeField(blank=True, null=True, verbose_name='Начало перерыва 4')),
                ('end_pause_4', models.TimeField(blank=True, null=True, verbose_name='Конец перерыва 4')),
                ('start_pause_5', models.TimeField(blank=True, null=True, verbose_name='Начало перерыва 5')),
                ('end_pause_5', models.TimeField(blank=True, null=True, verbose_name='Конец перерыва 5')),
                ('start_pause_6', models.TimeField(blank=True, null=True, verbose_name='Начало перерыва 6')),
                ('end_pause_6', models.TimeField(blank=True, null=True, verbose_name='Конец перерыва 6')),
                ('start_pause_7', models.TimeField(blank=True, null=True, verbose_name='Начало перерыва 7')),
                ('end_pause_7', models.TimeField(blank=True, null=True, verbose_name='Конец перерыва 7')),
                ('start_pause_8', models.TimeField(blank=True, null=True, verbose_name='Начало перерыва 8')),
                ('end_pause_8', models.TimeField(blank=True, null=True, verbose_name='Конец перерыва 8')),
                ('start_pause_9', models.TimeField(blank=True, null=True, verbose_name='Начало перерыва 9')),
                ('end_pause_9', models.TimeField(blank=True, null=True, verbose_name='Конец перерыва 9')),
                ('start_pause_10', models.TimeField(blank=True, null=True, verbose_name='Начало перерыва 10')),
                ('end_pause_10', models.TimeField(blank=True, null=True, verbose_name='Конец перерыва 10')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Режим рабочего дня',
                'verbose_name_plural': 'Режимы рабочего дня',
                'db_table': 'ShiftWorkingDayMode',
            },
        ),
        migrations.CreateModel(
            name='ShiftCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.shiftday', verbose_name='День недели')),
                ('shift_mode', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Core.shiftmode', verbose_name='Режим сменности')),
                ('shift_working_day_mode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Core.shiftworkingdaymode', verbose_name='Режим рабочего дня')),
            ],
            options={
                'verbose_name': 'Календарь',
                'verbose_name_plural': 'Календари',
                'db_table': 'ShiftCalendar',
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('isdistributed', models.BooleanField(default=False)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.area')),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.batch')),
                ('batch_archive', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.batcharchive')),
            ],
            options={
                'db_table': 'Stage',
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('time_pz', models.DurationField(blank=True, null=True)),
                ('time_sh', models.DurationField(blank=True, null=True)),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.stage')),
            ],
            options={
                'db_table': 'Operation',
            },
        ),
        migrations.CreateModel(
            name='Chiefdistribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.batch')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.department')),
                ('operation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Core.operation')),
                ('stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Core.stage')),
            ],
            options={
                'db_table': 'Chiefdistribution',
            },
        ),
        migrations.CreateModel(
            name='Stagearchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('batch_archive', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.batcharchive')),
            ],
            options={
                'db_table': 'Stagearchive',
            },
        ),
        migrations.CreateModel(
            name='Operationarchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=50)),
                ('time_pz', models.DurationField(blank=True, null=True)),
                ('time_sh', models.DurationField(blank=True, null=True)),
                ('stage_archive', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.stagearchive')),
            ],
            options={
                'db_table': 'Operationarchive',
            },
        ),
        migrations.CreateModel(
            name='Stagedistribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chief_batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.chiefbatch')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.department')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.stage')),
                ('stage_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.stagestatus')),
            ],
            options={
                'db_table': 'Stagedistribution',
            },
        ),
        migrations.CreateModel(
            name='Chiefoperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_distributed', models.BooleanField(default=False)),
                ('chief_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.chiefbatch')),
                ('operation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.operation')),
                ('stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.stage')),
                ('distribution_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.stagedistribution')),
            ],
            options={
                'db_table': 'Chiefoperation',
            },
        ),
        migrations.CreateModel(
            name='Subdivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название подразделения')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Core.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения',
                'db_table': 'Subdivision',
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0)),
                ('time_sh', models.DurationField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('operation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.operation')),
            ],
            options={
                'db_table': 'Transfer',
            },
        ),
        migrations.CreateModel(
            name='Transferarchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_sh', models.DurationField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('operation_archive', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.operationarchive')),
            ],
            options={
                'db_table': 'Transferarchive',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('surname', models.CharField(max_length=255, verbose_name='Отчеств')),
                ('profile_picture', models.FileField(blank=True, null=True, storage=PKMApi.yandex_s3_storage.ClientImgStorage(), upload_to='', verbose_name='Фотография')),
                ('password', models.CharField(max_length=255, null=True, verbose_name='Пароль')),
                ('position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Должность')),
                ('token', models.CharField(blank=True, null=True, verbose_name='Токен')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.company', verbose_name='Компания')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('subdivision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.subdivision', verbose_name='Подразделение')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Uploadedreport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(default=0, max_length=100)),
                ('report_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.reporttype')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Uploadedreport',
            },
        ),
        migrations.CreateModel(
            name='Allocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Core.area')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Allocation',
            },
        ),
    ]
